<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Git</title>
    <link href="/2020/05/30/git_notes/"/>
    <url>/2020/05/30/git_notes/</url>
    
    <content type="html"><![CDATA[<p>This is a commonly used command in the process of using git, record it for future reference.</p><h1 id="git-notes"><a href="#git-notes" class="headerlink" title="git notes"></a>git notes</h1><h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">git init  <span class="hljs-regexp">//</span> 初始化目录<br>git pull  <span class="hljs-regexp">//</span> 从仓库更新最新源码<br></code></pre></td></tr></table></figure><h2 id="submit"><a href="#submit" class="headerlink" title="submit"></a>submit</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">git add.      <span class="hljs-regexp">//</span> 将修改的文件加入暂存区<br>git commit -m <span class="hljs-regexp">//</span> 将文件提交到分支<br>git push      <span class="hljs-regexp">//</span> 推送代码<br></code></pre></td></tr></table></figure><h2 id="warehouse-Status"><a href="#warehouse-Status" class="headerlink" title="warehouse Status"></a>warehouse Status</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">git status  <span class="hljs-regexp">//</span> 可以看到当前仓库的情况<br>git log     <span class="hljs-regexp">//</span> 可以看到提交的历史记录（看不到被删掉的）<br>git reflog  <span class="hljs-regexp">//</span> 可以查看所有分支的所有操作记录，包括被删掉的commit<br>git diff    <span class="hljs-regexp">//</span> 可以查看到当前修改的内容<br></code></pre></td></tr></table></figure><h2 id="return-To-The-Past"><a href="#return-To-The-Past" class="headerlink" title="return To The Past"></a>return To The Past</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">git reset --hard HEAD^    <span class="hljs-regexp">//</span> 回到上一个commit<br>git reset --hard HEAD^    <span class="hljs-regexp">//</span> 回到上上个commit<br>git reset --hard xxxxxxx  <span class="hljs-regexp">//</span> 回到指定id的commit (<span class="hljs-number">7</span>位数 git log 前七位)<br></code></pre></td></tr></table></figure><h2 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h2><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs delphi">git checkout -b <span class="hljs-keyword">name</span>                                      <span class="hljs-comment">// 创建并切换到新的分支</span><br>git checkout -b branch-<span class="hljs-keyword">name</span> origin/branch-<span class="hljs-keyword">name</span>            <span class="hljs-comment">// 在本地和远程建立对应分支</span><br>git branch --<span class="hljs-keyword">set</span>-upstream branch-<span class="hljs-keyword">name</span> origin/branch-<span class="hljs-keyword">name</span>  <span class="hljs-comment">// 将本地分支和远程分支相关联</span><br>git branch                                                <span class="hljs-comment">// 可以看到分支情况</span><br>git branch -d <span class="hljs-keyword">name</span>                                        <span class="hljs-comment">// 可以删除一个分支</span><br>git branch -D <span class="hljs-keyword">name</span>                                        <span class="hljs-comment">// 可以删除一个没被合并过的分支</span><br></code></pre></td></tr></table></figure><h2 id="merge"><a href="#merge" class="headerlink" title="merge"></a>merge</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata">git <span class="hljs-keyword">merge</span>                 <span class="hljs-comment">// 合并分支，默认的 merge 是 fast forward, 合并就看不出来曾经做过合并</span><br>git <span class="hljs-keyword">merge</span> -<span class="hljs-keyword">m</span> <span class="hljs-string">&quot;&quot;</span> --<span class="hljs-keyword">no</span>-ff   <span class="hljs-comment">// 使用 --no-ff 参数普通合并, 合并后会有一个 commit 显示</span><br></code></pre></td></tr></table></figure><h2 id="garbage-Station"><a href="#garbage-Station" class="headerlink" title="garbage Station"></a>garbage Station</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">git checkout -- file    <span class="hljs-regexp">//</span> 可以丢弃工作区的内容 使文件回到暂存区或分支的状态<br>git checkout -- file    <span class="hljs-regexp">//</span> 也可以防止不小心删除 从代码库里重新拉回来<br>git rm name             <span class="hljs-regexp">//</span> 删除文件后需要 commit 同步到版本库<br></code></pre></td></tr></table></figure><h2 id="remote-Push"><a href="#remote-Push" class="headerlink" title="remote Push"></a>remote Push</h2><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xl">git remote add origin git@server-<span class="hljs-keyword">name</span>:<span class="hljs-built_in">path</span>/repo-<span class="hljs-keyword">name</span>.git  <span class="hljs-comment">// 关联一个远程的仓库</span><br>git push -u origin master                                 <span class="hljs-comment">// 第一次将本地 master 推送</span><br>git push origin master                                    <span class="hljs-comment">// 以后推送</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/05/25/hello_world/"/>
    <url>/2020/05/25/hello_world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>record</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
